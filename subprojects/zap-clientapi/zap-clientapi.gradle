plugins {
    id "maven-publish"
    id "signing"
    id "me.champeau.gradle.japicmp" version "0.2.6"
    id "org.owasp.dependencycheck" version "3.2.1"
}

sourceSets { examples }

assemble.dependsOn examplesClasses

dependencies {
    // XXX Change to implementation (it's not exposed in public API) when bumping major version.
    api 'org.jdom:jdom:1.1.3'

    examplesImplementation sourceSets.main.output
}

jar {
    manifest {
        attributes 'Implementation-Title': 'OWASP ZAP API Client',
        'Implementation-Version': version,
        'Main-Class': 'org.zaproxy.clientapi.core.ClientApiMain',
        'Create-Date': new Date().format("yyyy-MM-dd")
    }
}

configurations {
    japicmpBaseline
}

dependencies {
    japicmpBaseline ("${project.group}:${project.name}:$versionBC") { force = true }
}

dependencyCheck {
    skipConfigurations += "japicmpBaseline"
}

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
    group 'verification'
    description "Checks artifacts' binary compatibility with latest (released) version '$versionBC'."
    // XXX Don't run by default with Java 9+, does not work (needs the module java.xml.bind). 
    if (JavaVersion.current() == JavaVersion.VERSION_1_8) {
        check.dependsOn 'japicmp'
    }
    inputs.files(jar)

    oldClasspath = configurations.japicmpBaseline
    newClasspath = configurations.runtimeClasspath + files(jar)
    onlyBinaryIncompatibleModified = true
    failOnModification = true
    ignoreMissingClasses = true
    htmlOutputFile = file("$buildDir/reports/japi.html")
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task uberJar(type: Jar) {
    group 'build'
    description 'Assembles a jar archive containing the main jar and its dependencies.'
    baseName 'zap-api'
    manifest.from jar.manifest
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

build.dependsOn 'uberJar'

publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }

    publications {
        clientApi(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
            
            pom {
                name = 'OWASP ZAP API Client'
                description = 'Java implementation to access OWASP ZAP API.'
                url = 'https://github.com/zaproxy/zap-api-java'

                organization {
                    name = 'OWASP'
                    url = 'https://www.owasp.org/index.php/ZAP'
                }

                mailingLists {
                    mailingList {
                        name = 'OWASP ZAP User Group'
                        post = 'zaproxy-users@googlegroups.com'
                        archive = 'https://groups.google.com/group/zaproxy-users'
                    }
                    mailingList {
                        name = 'OWASP ZAP Developer Group'
                        post = 'zaproxy-develop@googlegroups.com'
                        archive = 'https://groups.google.com/group/zaproxy-develop'
                    }
                }

                scm {
                    url = 'https://github.com/zaproxy/zap-api-java'
                    connection = 'scm:git:https://github.com/zaproxy/zap-api-java.git'
                    developerConnection = 'scm:git:https://github.com/zaproxy/zap-api-java.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'psiinon'
                        name = 'Simon Bennetts'
                        email = 'psiinon@gmail.com'
                    }
                }
            }
        }
    }
}

signing {
    if (project.hasProperty('signing.keyId')) {
        sign publishing.publications.clientApi
    }
}
